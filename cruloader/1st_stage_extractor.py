from arc4 import ARC4
import pefile, argparse

RESOURCE_ID = 101
KEY_START_RESOURCE_POSITION = 12
KEY_END_RESOURCE_POSITION = 27
EXECUTABLE_START_POSITION = 28

def main(args):
    pe = pefile.PE(args.file)
    for rsrc in pe.DIRECTORY_ENTRY_RESOURCE.entries:
        for subentry in rsrc.directory.entries:
            if subentry.id == RESOURCE_ID:
                data = pe.get_data(subentry.directory.entries[0].data.struct.OffsetToData, subentry.directory.entries[0].data.struct.Size)
                rc4 = ARC4(data[KEY_START_RESOURCE_POSITION:KEY_END_RESOURCE_POSITION])
                data = data[EXECUTABLE_START_POSITION:]
                decdata = rc4.decrypt(data)
                with open(args.output, "wb") as f:
                    f.write(decdata)
                print("[+] Payload has been sucessfully extracted and written to {}".format(args.output))

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Payload extractor for cruloader first stage", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-f', '--file', required=True, help='Full path to the first stage', default=argparse.SUPPRESS)
    parser.add_argument('-o', '--output', help='Output filename', default='payload.bin')

    main(parser.parse_args())